<project name="TwitterText" default="test" basedir=".">
    <description>
        Text processing library for Twitter Tweets.
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="src.tests" location="tests"/>
  <property name="build" location="build"/>
  <property name="build.tests" location="build"/>
  <property name="conformance.dir" location="test-data/twitter-text-conformance"/>
  <property name="docs"  location="docs"/>
  <property name="javadoc"  location="docs/api"/>
  <property name="dist"  location="dist"/>
  <property name="jar.version" value="1.1.7" />

  <path id="jars.tests">
    <pathelement location="jars/junit-4.6.jar"/>
    <pathelement location="jars/jyaml-1.3.jar"/>
  </path>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init" description="compile the source ">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}"/>
  </target>

  <target name="compile-tests" depends="init" description="compile the tests ">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src.tests}" destdir="${build.tests}" encoding="utf-8">
      <classpath>
        <pathelement location="${build}"/>
        <path refid="jars.tests" />
        <pathelement path="${java.class.path}"/>
      </classpath>
    </javac>
  </target>

  <target name="test" depends="compile,compile-tests" description="Run the unit and conformance tests">
    <junit printsummary="yes" haltonfailure="yes">
      <jvmarg value="-Dfile.encoding=UTF-8"/>
      <sysproperty key="conformance.dir" value="${conformance.dir}"/>

      <classpath>
        <pathelement location="${build.tests}"/>
        <path refid="jars.tests"/>
        <pathelement path="${java.class.path}"/>
      </classpath>

      <formatter type="plain" usefile="false"/>

      <batchtest fork="yes">
        <fileset dir="${src.tests}">
          <include name="**/*Test*.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>
  
  <target name="local-test" depends="compile,compile-tests" description="Run the unit tests">
    <junit printsummary="yes" haltonfailure="yes">
      <jvmarg value="-Dfile.encoding=UTF-8"/>

      <classpath>
        <pathelement location="${build.tests}"/>
        <path refid="jars.tests"/>
        <pathelement path="${java.class.path}"/>
      </classpath>

      <formatter type="plain" usefile="false"/>

      <batchtest fork="yes">
        <fileset dir="${src.tests}">
          <include name="**/*Test*.java"/>
          <exclude name="**/ConformanceTest.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="javadoc" depends="compile" description="Generate JavaDocs">
    <javadoc packagenames="com.twitter.*"
             sourcepath="src"
             defaultexcludes="yes"
             destdir="${javadoc}"
             author="true"
             version="true"
             use="true"
             windowtitle="Twitter Text API">
      <doctitle><![CDATA[<h1>Twitter Text API</h1>]]></doctitle>
      <bottom><![CDATA[<i>Copyright &#169; 2010 Twitter, Inc. All Rights Reserved.</i>]]></bottom>
    </javadoc>
  </target>

  <target name="dist" depends="compile" description="generate the distribution">
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <!-- Put everything in ${build} into the twitter-text-${jar.version}.jar file -->
    <jar destfile="${dist}/lib/twitter-text-${jar.version}.jar">
       <fileset dir="${build}" excludes="**/*Test.class"/>
       <manifest>
         <section name="LICENSE">
           <attribute name="License" value="Apache License, Version 2.0"/>
         </section>
       </manifest>
       <fileset file="LICENSE"/>
     </jar>
  </target>

  <target name="clean" description="clean up">
    <delete dir="${build}"/>
    <delete dir="${build.tests}"/>
    <delete dir="${dist}"/>
  </target>
</project>
